# directives is an optional property. When not present, all directives are inferred. When present, only
# the defined directives are applied.
#directives=identityName,linkNativeIdentity,linkDisplayName

# Default source. Source choices are:
# 'csv': the accompaning CSV file provides the data
# 'literal': the value property will be used as a literal value
source=csv

# Default operation. Operation choices are:
# 'update': The matched Node is updated with the target value. If the xpath is a property or text, the value
#           over written. If it is an element, nothing happens if the element already exists
# 'append': The xpath defines a Node to be added to the parent Node.
# 'upateOrAppend': Update will do nothing if the XPath is not found. UpdateorAppend will 
#                  fall back to an append if no Node is found.
# 'appendUnique': Look for this xpath and if it already exists, do nothing. If it doesn't
#                 exist, then create and add it.
# Feels like for @Attr, updateOrAppend and appendUnique are synonymous
operation=update

# This indicates the CSV column that distinguishes one document from another
# document=name
# Instead of the CSV column to distinguish the object, use a Directive
documentDirective=identityName

# Updates the @name attribute on <Identity/>
identityName.xpath=/sailpoint/Identity/@name
identityName.value=name

# Sets the displayName in the template Attributes map. Since there's
# only one entry, we can cheat on this and not correlate it to an
# entry with a corresponding '@key' (i.e. it doesn't need a parent defined
# since it's the only item in this xpath)
identityDisplay.xpath=/sailpoint/Identity/Attributes/Map/entry/@value
identityDisplay.value=displayName
identityDisplay.operation=update

# Updates the @identity attribute on <Link/>
linkNativeIdentity.xpath=/sailpoint/Identity/Links/Link/@identity
linkNativeIdentity.value=linkNativeIdentity
# This directive will be applied mulitple times for the same data. It needs to be appended
# per unique nativeIdentity (@identity). Use operation "appendUnique" (this is a common pattern
linkNativeIdentity.operation=appendUnique

# Sets the DisplayName for the correlated Link/@identity
# Feature idea: Since I know the parent directive, I should be
#               able to define relative XPaths. This could simply
#               be defined as '@displayname'
linkDisplayName.xpath=/sailpoint/Identity/Links/Link/@displayname
linkDisplayName.parent=linkNativeIdentity
linkDisplayName.value=linkDisplayName
linkDisplayName.operation=appendUnique

# ApplicationRef
linkApplicationName.xpath=/sailpoint/Identity/Links/Link/ApplicationRef/Reference/@name
linkApplicationName.value=application
linkApplicationName.operation=appendUnique
linkApplicationName.parent=linkNativeIdentity

# This is a static value that all <Link/> elements get
entitlementsStatic.xpath=/sailpoint/Identity/Links/Link/@entitlements
entitlementsStatic.value="true"
entitlementsStatic.parent=linkNativeIdentity
entitlementsStatic.source=literal
entitlementsStatic.opeation=update

# email attribute key
linkAttributeAdminKey.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@key
linkAttributeAdminKey.value=email
linkAttributeAdminKey.source=literal
linkAttributeAdminKey.operation=appendUnique
linkAttributeAdminKey.parent=linkNativeIdentity
# Example of parentElement: parent defines the parent Directive which is vital
#     in locating the corresponding Element. However, the true "parent" Element
#     for this Node is a <Map>, not a <Link> as the parent Directive would suggest.
#     So we provide a means to pinpoint the actual parent Element when it doesn't
#     directly correlate to the Node defined by the parent Directive.
linkAttributeAdminKey.parentElement=/sailpoint/Identity/Links/Link/Attributes/Map

# email attribute value
linkAttributeAdminValue.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@value
# since the parent is 'linkAttributeAdminKey', we don't have to specify a parentElement
#     property here.
linkAttributeAdminValue.parent=linkAttributeAdminKey
linkAttributeAdminValue.operation=appendUnique
linkAttributeAdminValue.value=email
linkAttributeAdminValue.source=csv

# Multi-valued String List example - Defines the attribute
linkAttributeMultiValue.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@key
linkAttributeMultiValue.operation=appendUnique
linkAttributeMultiValue.source=literal
linkAttributeMultiValue.value=multiValued
linkAttributeMultiValue.parent=linkNativeIdentity
linkAttributeMultiValue.parentElement=/sailpoint/Identity/Links/Link/Attributes/Map

# Multi-valued String List example - Defines the String List
linkAttributeMultiValueData.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/value/List/String/text()
linkAttributeMultiValueData.parent=linkAttributeMultiValue
linkAttributeMultiValueData.parentElement=/sailpoint/Identity/Links/Link/Attributes/Map/entry/value/List
linkAttributeMultiValueData.value=multiValueDataText
linkAttributeMultiValueData.operation=append
