# Can't I infer this? If I did, I'd have to come from two angles:
# 1. All directive properties have a base property of 'directive.' -- ugh, so much typing
# 2. All directive properties are any that don't match our known properties. This feels rife w/ error possibilities.
# 3. possibility - every directive requires an 'xpath'. I can infer the directives by looking for properties ending
#                  with the '.xpath' token!
#directives=person,job

# Default source. Source choices are:
# 'csv': the accompaning CSV file provides the data
# 'literal': the value property will be used as a literal value
source=csv

# Default operation. Operation choices are:
# 'update': The matched Node is updated with the target value
# 'append': The xpath defines a Node to be added to the parent Node
# 'upateOrAppend': Update will do nothing if the XPath is not found. UpdateorAppend will 
#                  fall back to an append if no Node is found.
operation=update
# This indicates the CSV column that distinguishes one document from another
document=name

identityName.xpath=/sailpoint/Identity/@name
identityName.value=name

linkDisplayName.xpath=/sailpoint/Identity/Links/Link/@displayname
linkDisplayName.value=linkDisplayName

linkNativeIdentity.xpath=/sailpoint/Identity/Links/Link/@identity
linkNativeIdentity.value=linkNativeIdentity

linkApplicationName.xpath=/sailpoint/Links/Link/ApplicationRef/Reference/@name
linkApplicationName.value=application

# Property xpath with using default operaton 'update', meaning it will update
# the existing parent element with this property.
linkAttributeAdminKey.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@key
linkAttributeAdminKey.value=email
linkAttributeAdminKey.source=literal
# Always append this xpath
linkAttributeAdminKey.operation=append

# This is the corresponding value to the same <entry> defined above. In this case, we're
# staying with the default operation of 'update'
linkAttributeAdminValue.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@value
# the parent is the directive that we need to append this node to. In this case, the parent
# is another property node. So the processor will look for that xpath where 'key' = whatever
# the directive's value is. It will then determine if the Node is an Element. If not, it will
# retrieve the parent Node and use that as the parent of this Node.
linkAttributeAdminValue.parent=linkAttributeAdminKey
linkAttributeAdminValue.value=email
linkAttributeAdminValue.source=csv

linkAttributeMultiValue.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/@key
linkAttributeMultiValue.operation=append
linkAttributeMultiValue.source=literal
linkAttributeMultiValue.value=multiValued

# This is interesting. In this case, our XPath defines a full hierarchy we'll have to create
linkAttributeMultiValueData.xpath=/sailpoint/Identity/Links/Link/Attributes/Map/entry/value/List/String/text()
linkAttributeMultiValueData.parentElement=linkAttributeMultiValue
linkAttributeMultiValueData.value=multiValueDataText
linkAttributeMultiValueData.operation=append
